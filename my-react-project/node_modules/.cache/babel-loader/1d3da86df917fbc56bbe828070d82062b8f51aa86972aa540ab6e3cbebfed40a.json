{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kant\\\\Desktop\\\\my-react-project\\\\src\\\\SelectionOutput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport styles from './SelectionOutput.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SelectionOutput() {\n  _s();\n  const location = useLocation();\n  // Accessing the rooms array correctly\n  const rooms = location.state && location.state.roomsData && Array.isArray(location.state.roomsData.rooms) ? location.state.roomsData.rooms : [];\n\n  // Initial State for selected building\n  const [selectedBuilding, setSelectedBuilding] = useState('');\n\n  // Function to create a unique list of buildings from rooms\n  const buildings = rooms.reduce((acc, room) => {\n    const building = room[0].charAt(0);\n    if (!acc.includes(building)) {\n      acc.push(building);\n    }\n    return acc;\n  }, []).sort(); // Sorting building identifiers\n\n  // Filter rooms based on selected building\n  const filteredRooms = rooms.filter(room => room[0].charAt(0) === selectedBuilding);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.sidebar,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: buildings.map((building, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedBuilding(building),\n          children: [\"Building \", building]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Rooms in Building \", selectedBuilding]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), filteredRooms.length > 0 ? filteredRooms.map((room, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: `room-${idx}`,\n          name: `room-${idx}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `room-${idx}`,\n          children: room[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No rooms available in this building.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectionOutput, \"EIgGE6Ijeki7FJ26mu7axvV0OeA=\", false, function () {\n  return [useLocation];\n});\n_c = SelectionOutput;\nexport default SelectionOutput;\nvar _c;\n$RefreshReg$(_c, \"SelectionOutput\");","map":{"version":3,"names":["React","useState","useLocation","styles","jsxDEV","_jsxDEV","SelectionOutput","_s","location","rooms","state","roomsData","Array","isArray","selectedBuilding","setSelectedBuilding","buildings","reduce","acc","room","building","charAt","includes","push","sort","filteredRooms","filter","className","container","children","sidebar","map","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","idx","type","id","name","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/kant/Desktop/my-react-project/src/SelectionOutput.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport styles from './SelectionOutput.module.css';\r\n\r\nfunction SelectionOutput() {\r\n  const location = useLocation();\r\n  // Accessing the rooms array correctly\r\n  const rooms = location.state && location.state.roomsData && Array.isArray(location.state.roomsData.rooms) \r\n                 ? location.state.roomsData.rooms \r\n                 : [];\r\n\r\n  // Initial State for selected building\r\n  const [selectedBuilding, setSelectedBuilding] = useState('');\r\n\r\n  // Function to create a unique list of buildings from rooms\r\n  const buildings = rooms.reduce((acc, room) => {\r\n    const building = room[0].charAt(0);\r\n    if (!acc.includes(building)) {\r\n      acc.push(building);\r\n    }\r\n    return acc;\r\n  }, []).sort();  // Sorting building identifiers\r\n\r\n  // Filter rooms based on selected building\r\n  const filteredRooms = rooms.filter(room => room[0].charAt(0) === selectedBuilding);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.sidebar}>\r\n        <ul>\r\n          {buildings.map((building, index) => (\r\n            <li key={index} onClick={() => setSelectedBuilding(building)}>\r\n              Building {building}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"rooms-display\">\r\n        <h1>Rooms in Building {selectedBuilding}</h1>\r\n        {filteredRooms.length > 0 ? filteredRooms.map((room, idx) => (\r\n          <div className=\"room\" key={idx}>\r\n            <input type=\"checkbox\" id={`room-${idx}`} name={`room-${idx}`} />\r\n            <label htmlFor={`room-${idx}`}>{room[0]}</label>\r\n          </div>\r\n        )) : <p>No rooms available in this building.</p>}\r\n      </div>\r\n      <button className=\"submit-button\">Submit</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectionOutput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}