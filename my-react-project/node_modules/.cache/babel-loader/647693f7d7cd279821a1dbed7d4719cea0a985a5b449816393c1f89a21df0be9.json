{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kant\\\\Desktop\\\\my-react-project\\\\src\\\\SelectionOutput.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './SelectionOutput.css';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SelectionOutput() {\n  _s();\n  const location = useLocation();\n  const roomsData = location.state ? location.state.roomsData : [];\n\n  // Parse and group rooms by building and floor\n  const groupRooms = rooms => {\n    const grouped = {};\n    rooms.forEach(room => {\n      const building = room[0].charAt(0); // First character is building, e.g., 'A'\n      const floor = room[0].substring(1, 2); // Second character is floor, e.g., '2'\n      const identifier = `Bld. ${building}, Floor ${floor}`;\n      if (!grouped[identifier]) {\n        grouped[identifier] = [];\n      }\n      grouped[identifier].push(room);\n    });\n    return grouped;\n  };\n  const groupedRooms = groupRooms(roomsData);\n\n  // Render grouped rooms\n  const renderRooms = () => {\n    return Object.entries(groupedRooms).map(([key, rooms], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), rooms.map((room, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: room[0],\n          name: room[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: room[0],\n          children: room[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [roomsData.length > 0 ? renderRooms() : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No rooms available or selection criteria not met.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 47\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectionOutput, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = SelectionOutput;\nexport default SelectionOutput;\nvar _c;\n$RefreshReg$(_c, \"SelectionOutput\");","map":{"version":3,"names":["React","useLocation","jsxDEV","_jsxDEV","SelectionOutput","_s","location","roomsData","state","groupRooms","rooms","grouped","forEach","room","building","charAt","floor","substring","identifier","push","groupedRooms","renderRooms","Object","entries","map","key","index","children","fileName","_jsxFileName","lineNumber","columnNumber","idx","className","type","id","name","htmlFor","length","_c","$RefreshReg$"],"sources":["C:/Users/kant/Desktop/my-react-project/src/SelectionOutput.js"],"sourcesContent":["import React from 'react';\r\nimport './SelectionOutput.css';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nfunction SelectionOutput() {\r\n  const location = useLocation();\r\n  const roomsData = location.state ? location.state.roomsData : [];\r\n\r\n  // Parse and group rooms by building and floor\r\n  const groupRooms = (rooms) => {\r\n    const grouped = {};\r\n    rooms.forEach(room => {\r\n      const building = room[0].charAt(0); // First character is building, e.g., 'A'\r\n      const floor = room[0].substring(1, 2); // Second character is floor, e.g., '2'\r\n      const identifier = `Bld. ${building}, Floor ${floor}`;\r\n\r\n      if (!grouped[identifier]) {\r\n        grouped[identifier] = [];\r\n      }\r\n      grouped[identifier].push(room);\r\n    });\r\n    return grouped;\r\n  };\r\n\r\n  const groupedRooms = groupRooms(roomsData);\r\n\r\n  // Render grouped rooms\r\n  const renderRooms = () => {\r\n    return Object.entries(groupedRooms).map(([key, rooms], index) => (\r\n      <div key={index}>\r\n        <h1>{key}</h1>\r\n        {rooms.map((room, idx) => (\r\n          <div className=\"checkbox-row\" key={idx}>\r\n            <input type=\"checkbox\" id={room[0]} name={room[0]} />\r\n            <label htmlFor={room[0]}>{room[0]}</label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {roomsData.length > 0 ? renderRooms() : <p>No rooms available or selection criteria not met.</p>}\r\n      <button className=\"submit-button\">Submit</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectionOutput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}