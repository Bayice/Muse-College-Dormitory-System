{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kant\\\\Desktop\\\\my-react-project\\\\src\\\\SelectionOutput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport styles from './SelectionOutput.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SelectionOutput() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate(); // Hook to perform navigation\n  const rooms = location.state && location.state.roomsData && Array.isArray(location.state.roomsData.rooms) ? location.state.roomsData.rooms : [];\n  const userData = location.state ? location.state.user : null;\n  const [selectedBuilding, setSelectedBuilding] = useState('');\n  const [checkedRooms, setCheckedRooms] = useState({});\n  const buildings = rooms.reduce((acc, room) => {\n    const building = room[0].charAt(0);\n    if (!acc.includes(building)) {\n      acc.push(building);\n    }\n    return acc;\n  }, []).sort();\n  const filteredRooms = rooms.filter(room => room[0].charAt(0) === selectedBuilding);\n  const handleSubmit = async () => {\n    const selectedRoomEntry = Object.entries(checkedRooms).find(([key, value]) => value);\n    if (selectedRoomEntry) {\n      const [selectedRoomIndex] = selectedRoomEntry;\n      const roomToSend = filteredRooms[parseInt(selectedRoomIndex)][0];\n      try {\n        const response = await fetch('http://localhost:5000/view_room', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            Room_ID: roomToSend\n          })\n        });\n        if (response.ok) {\n          const rooms_students = await response.json(); // Renamed from 'data' to 'rooms_students'\n          console.log(\"Data received from server:\", rooms_students);\n          navigate('/Dom_select', {\n            state: {\n              rooms_students: rooms_students.data\n            }\n          });\n        } else {\n          console.error('Failed to send room data:', response.status);\n        }\n      } catch (error) {\n        console.error('Error sending room data:', error);\n      }\n    } else {\n      alert('Please select a room before submitting.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.sidebar,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: buildings.map((building, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedBuilding(building),\n          className: styles.building,\n          children: [\"Muse \", building]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.roomsDisplay,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\u6B22\\u8FCE\\u6765\\u5230\\u601D\\u5EF7 \", selectedBuilding, \"\\u680B\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), selectedBuilding === '' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.noRooms,\n        children: \"\\u8BF7\\u9009\\u62E9\\u4F60\\u7684\\u623F\\u95F4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this) : filteredRooms.length > 0 ? filteredRooms.map((room, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.room,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: `room-${idx}`,\n          name: `room-${idx}`,\n          checked: !!checkedRooms[idx],\n          onChange: () => setCheckedRooms(prev => ({\n            ...prev,\n            [idx]: !prev[idx]\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `room-${idx}`,\n          children: room[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.noRooms,\n        children: \"No rooms available in this building.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.submitButton,\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectionOutput, \"YsJYGQdigRRRtqlX8P+qwIbGOpA=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = SelectionOutput;\nexport default SelectionOutput;\nvar _c;\n$RefreshReg$(_c, \"SelectionOutput\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","styles","jsxDEV","_jsxDEV","SelectionOutput","_s","location","navigate","rooms","state","roomsData","Array","isArray","userData","user","selectedBuilding","setSelectedBuilding","checkedRooms","setCheckedRooms","buildings","reduce","acc","room","building","charAt","includes","push","sort","filteredRooms","filter","handleSubmit","selectedRoomEntry","Object","entries","find","key","value","selectedRoomIndex","roomToSend","parseInt","response","fetch","method","headers","body","JSON","stringify","Room_ID","ok","rooms_students","json","console","log","data","error","status","alert","className","container","children","sidebar","map","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","roomsDisplay","noRooms","length","idx","type","id","name","checked","onChange","prev","htmlFor","submitButton","_c","$RefreshReg$"],"sources":["C:/Users/kant/Desktop/my-react-project/src/SelectionOutput.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport styles from './SelectionOutput.module.css';\r\n\r\nfunction SelectionOutput() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate(); // Hook to perform navigation\r\n  const rooms = location.state && location.state.roomsData && Array.isArray(location.state.roomsData.rooms)\r\n                 ? location.state.roomsData.rooms\r\n                 : [];\r\n  const userData = location.state ? location.state.user : null;\r\n  const [selectedBuilding, setSelectedBuilding] = useState('');\r\n  const [checkedRooms, setCheckedRooms] = useState({});\r\n\r\n  const buildings = rooms.reduce((acc, room) => {\r\n    const building = room[0].charAt(0);\r\n    if (!acc.includes(building)) {\r\n      acc.push(building);\r\n    }\r\n    return acc;\r\n  }, []).sort();\r\n\r\n  const filteredRooms = rooms.filter(room => room[0].charAt(0) === selectedBuilding);\r\n\r\n  const handleSubmit = async () => {\r\n    const selectedRoomEntry = Object.entries(checkedRooms).find(([key, value]) => value);\r\n    if (selectedRoomEntry) {\r\n        const [selectedRoomIndex] = selectedRoomEntry;\r\n        const roomToSend = filteredRooms[parseInt(selectedRoomIndex)][0];\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/view_room', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ Room_ID: roomToSend })\r\n            });\r\n\r\n            if (response.ok) {\r\n                const rooms_students = await response.json();  // Renamed from 'data' to 'rooms_students'\r\n                console.log(\"Data received from server:\", rooms_students);\r\n                navigate('/Dom_select', { state: { rooms_students: rooms_students.data } }); \r\n            } else {\r\n                console.error('Failed to send room data:', response.status);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error sending room data:', error);\r\n        }\r\n    } else {\r\n        alert('Please select a room before submitting.');\r\n    }\r\n};\r\n\r\n\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.sidebar}>\r\n        <ul>\r\n          {buildings.map((building, index) => (\r\n            <li key={index} onClick={() => setSelectedBuilding(building)} className={styles.building}>\r\n              Muse {building}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className={styles.roomsDisplay}>\r\n        <h1>欢迎来到思廷 {selectedBuilding}栋</h1>\r\n        {selectedBuilding === '' ? (\r\n          <p className={styles.noRooms}>请选择你的房间</p>\r\n        ) : (\r\n          filteredRooms.length > 0 ? filteredRooms.map((room, idx) => (\r\n            <div className={styles.room} key={idx}>\r\n              <input\r\n                type=\"checkbox\"\r\n                id={`room-${idx}`}\r\n                name={`room-${idx}`}\r\n                checked={!!checkedRooms[idx]}\r\n                onChange={() => setCheckedRooms(prev => ({ ...prev, [idx]: !prev[idx] }))}\r\n              />\r\n              <label htmlFor={`room-${idx}`}>{room[0]}</label>\r\n            </div>\r\n          )) : <p className={styles.noRooms}>No rooms available in this building.</p>\r\n        )}\r\n      </div>\r\n      <button className={styles.submitButton} onClick={handleSubmit}>Submit</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectionOutput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}