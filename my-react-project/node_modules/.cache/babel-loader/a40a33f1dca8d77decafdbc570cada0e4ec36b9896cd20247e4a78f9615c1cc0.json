{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kant\\\\Desktop\\\\my-react-project\\\\src\\\\SelectionOutput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport styles from './SelectionOutput.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SelectionOutput() {\n  _s();\n  const location = useLocation();\n  // Accessing the rooms array correctly\n  const rooms = location.state && location.state.roomsData && Array.isArray(location.state.roomsData.rooms) ? location.state.roomsData.rooms : [];\n\n  // Initial State for selected building\n  const [selectedBuilding, setSelectedBuilding] = useState('');\n\n  // Function to create a unique list of buildings from rooms\n  const buildings = rooms.reduce((acc, room) => {\n    const building = room[0].charAt(0);\n    if (!acc.includes(building)) {\n      acc.push(building);\n    }\n    return acc;\n  }, []).sort(); // Sorting building identifiers\n\n  // Filter rooms based on selected building\n  const filteredRooms = rooms.filter(room => room[0].charAt(0) === selectedBuilding);\n  return (\n    /*#__PURE__*/\n    // Use the styles object to reference class names\n    _jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.sidebar,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: buildings.map((building, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => setSelectedBuilding(building),\n            className: styles.building,\n            children: [\"Building \", building]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.roomsDisplay,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Rooms in Building \", selectedBuilding]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), filteredRooms.length > 0 ? filteredRooms.map((room, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.room,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: `room-${idx}`,\n            name: `room-${idx}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `room-${idx}`,\n            children: room[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.noRooms,\n          children: \"No rooms available in this building.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.submitButton,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(SelectionOutput, \"EIgGE6Ijeki7FJ26mu7axvV0OeA=\", false, function () {\n  return [useLocation];\n});\n_c = SelectionOutput;\nexport default SelectionOutput;\nvar _c;\n$RefreshReg$(_c, \"SelectionOutput\");","map":{"version":3,"names":["React","useState","useLocation","styles","jsxDEV","_jsxDEV","SelectionOutput","_s","location","rooms","state","roomsData","Array","isArray","selectedBuilding","setSelectedBuilding","buildings","reduce","acc","room","building","charAt","includes","push","sort","filteredRooms","filter","className","container","children","sidebar","map","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","roomsDisplay","length","idx","type","id","name","htmlFor","noRooms","submitButton","_c","$RefreshReg$"],"sources":["C:/Users/kant/Desktop/my-react-project/src/SelectionOutput.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport styles from './SelectionOutput.module.css';\r\n\r\nfunction SelectionOutput() {\r\n  const location = useLocation();\r\n  // Accessing the rooms array correctly\r\n  const rooms = location.state && location.state.roomsData && Array.isArray(location.state.roomsData.rooms) \r\n                 ? location.state.roomsData.rooms \r\n                 : [];\r\n\r\n  // Initial State for selected building\r\n  const [selectedBuilding, setSelectedBuilding] = useState('');\r\n\r\n  // Function to create a unique list of buildings from rooms\r\n  const buildings = rooms.reduce((acc, room) => {\r\n    const building = room[0].charAt(0);\r\n    if (!acc.includes(building)) {\r\n      acc.push(building);\r\n    }\r\n    return acc;\r\n  }, []).sort();  // Sorting building identifiers\r\n\r\n  // Filter rooms based on selected building\r\n  const filteredRooms = rooms.filter(room => room[0].charAt(0) === selectedBuilding);\r\n\r\n  return (\r\n    // Use the styles object to reference class names\r\n    <div className={styles.container}>\r\n      <div className={styles.sidebar}>\r\n        <ul>\r\n          {buildings.map((building, index) => (\r\n            <li key={index} onClick={() => setSelectedBuilding(building)} className={styles.building}>\r\n              Building {building}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className={styles.roomsDisplay}>\r\n        <h1>Rooms in Building {selectedBuilding}</h1>\r\n        {filteredRooms.length > 0 ? filteredRooms.map((room, idx) => (\r\n          <div className={styles.room} key={idx}>\r\n            <input type=\"checkbox\" id={`room-${idx}`} name={`room-${idx}`} />\r\n            <label htmlFor={`room-${idx}`}>{room[0]}</label>\r\n          </div>\r\n        )) : <p className={styles.noRooms}>No rooms available in this building.</p>}\r\n      </div>\r\n      <button className={styles.submitButton}>Submit</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectionOutput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}