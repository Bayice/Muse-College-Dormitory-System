{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kant\\\\Desktop\\\\my-react-project\\\\src\\\\SelectionOutput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport styles from './SelectionOutput.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SelectionOutput() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate(); // Hook to perform navigation\n  const rooms = location.state && location.state.roomsData && Array.isArray(location.state.roomsData.rooms) ? location.state.roomsData.rooms : [];\n  const [selectedBuilding, setSelectedBuilding] = useState('');\n  const [checkedRooms, setCheckedRooms] = useState({});\n  const buildings = rooms.reduce((acc, room) => {\n    const building = room[0].charAt(0);\n    if (!acc.includes(building)) {\n      acc.push(building);\n    }\n    return acc;\n  }, []).sort();\n  const filteredRooms = rooms.filter(room => room[0].charAt(0) === selectedBuilding);\n  const handleSubmit = async () => {\n    // Find the selected room to send to the server\n    const selectedRoom = Object.entries(checkedRooms).find(([key, value]) => value);\n    if (selectedRoom) {\n      try {\n        const response = await fetch('http://localhost:5000/view_room', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            room: filteredRooms[parseInt(selectedRoom[0])][0]\n          }) // Send room number\n        });\n        if (response.ok) {\n          navigate('./Dom_select'); // Navigate to /domselect if successful\n        } else {\n          console.error('Failed to send room data');\n        }\n      } catch (error) {\n        console.error('Error sending room data:', error);\n      }\n    } else {\n      alert('Please select a room before submitting.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.sidebar,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: buildings.map((building, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedBuilding(building),\n          className: styles.building,\n          children: [\"Muse \", building]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.roomsDisplay,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\u6B22\\u8FCE\\u6765\\u5230\\u601D\\u5EF7 \", selectedBuilding, \"\\u680B\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), selectedBuilding === '' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.noRooms,\n        children: \"\\u8BF7\\u9009\\u62E9\\u4F60\\u7684\\u623F\\u95F4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : filteredRooms.length > 0 ? filteredRooms.map((room, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.room,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: `room-${idx}`,\n          name: `room-${idx}`,\n          checked: !!checkedRooms[idx],\n          onChange: () => setCheckedRooms(prev => ({\n            ...prev,\n            [idx]: !prev[idx]\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `room-${idx}`,\n          children: room[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.noRooms,\n        children: \"No rooms available in this building.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.submitButton,\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectionOutput, \"YsJYGQdigRRRtqlX8P+qwIbGOpA=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = SelectionOutput;\nexport default SelectionOutput;\nvar _c;\n$RefreshReg$(_c, \"SelectionOutput\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","styles","jsxDEV","_jsxDEV","SelectionOutput","_s","location","navigate","rooms","state","roomsData","Array","isArray","selectedBuilding","setSelectedBuilding","checkedRooms","setCheckedRooms","buildings","reduce","acc","room","building","charAt","includes","push","sort","filteredRooms","filter","handleSubmit","selectedRoom","Object","entries","find","key","value","response","fetch","method","headers","body","JSON","stringify","parseInt","ok","console","error","alert","className","container","children","sidebar","map","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","roomsDisplay","noRooms","length","idx","type","id","name","checked","onChange","prev","htmlFor","submitButton","_c","$RefreshReg$"],"sources":["C:/Users/kant/Desktop/my-react-project/src/SelectionOutput.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport styles from './SelectionOutput.module.css';\r\n\r\nfunction SelectionOutput() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate(); // Hook to perform navigation\r\n  const rooms = location.state && location.state.roomsData && Array.isArray(location.state.roomsData.rooms)\r\n                 ? location.state.roomsData.rooms\r\n                 : [];\r\n\r\n  const [selectedBuilding, setSelectedBuilding] = useState('');\r\n  const [checkedRooms, setCheckedRooms] = useState({});\r\n\r\n  const buildings = rooms.reduce((acc, room) => {\r\n    const building = room[0].charAt(0);\r\n    if (!acc.includes(building)) {\r\n      acc.push(building);\r\n    }\r\n    return acc;\r\n  }, []).sort();\r\n\r\n  const filteredRooms = rooms.filter(room => room[0].charAt(0) === selectedBuilding);\r\n\r\n  const handleSubmit = async () => {\r\n    // Find the selected room to send to the server\r\n    const selectedRoom = Object.entries(checkedRooms).find(([key, value]) => value);\r\n\r\n    if (selectedRoom) {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/view_room', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ room: filteredRooms[parseInt(selectedRoom[0])][0] }) // Send room number\r\n        });\r\n        if (response.ok) {\r\n          navigate('./Dom_select'); // Navigate to /domselect if successful\r\n        } else {\r\n          console.error('Failed to send room data');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error sending room data:', error);\r\n      }\r\n    } else {\r\n      alert('Please select a room before submitting.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.sidebar}>\r\n        <ul>\r\n          {buildings.map((building, index) => (\r\n            <li key={index} onClick={() => setSelectedBuilding(building)} className={styles.building}>\r\n              Muse {building}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className={styles.roomsDisplay}>\r\n        <h1>欢迎来到思廷 {selectedBuilding}栋</h1>\r\n        {selectedBuilding === '' ? (\r\n          <p className={styles.noRooms}>请选择你的房间</p>\r\n        ) : (\r\n          filteredRooms.length > 0 ? filteredRooms.map((room, idx) => (\r\n            <div className={styles.room} key={idx}>\r\n              <input\r\n                type=\"checkbox\"\r\n                id={`room-${idx}`}\r\n                name={`room-${idx}`}\r\n                checked={!!checkedRooms[idx]}\r\n                onChange={() => setCheckedRooms(prev => ({ ...prev, [idx]: !prev[idx] }))}\r\n              />\r\n              <label htmlFor={`room-${idx}`}>{room[0]}</label>\r\n            </div>\r\n          )) : <p className={styles.noRooms}>No rooms available in this building.</p>\r\n        )}\r\n      </div>\r\n      <button className={styles.submitButton} onClick={handleSubmit}>Submit</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectionOutput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}