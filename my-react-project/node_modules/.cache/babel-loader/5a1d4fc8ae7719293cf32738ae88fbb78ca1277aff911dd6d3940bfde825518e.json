{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jerry\\\\OneDrive\\\\\\u684C\\u9762\\\\CUHKSZ\\\\CSC3170\\\\CSC3170-Project\\\\my-react-project\\\\src\\\\TutorDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './TutorDashboard.css'; // Ensure your CSS is still applied\nimport backgroundImage from './bg.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TutorDashboard() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    user,\n    role,\n    room,\n    floorData\n  } = location.state || {\n    user: null,\n    role: null,\n    room: null,\n    floorData: []\n  };\n  const [roomsInfo, setRoomsInfo] = useState({});\n\n  // Parse floor data to organize students by room\n  useEffect(() => {\n    const rooms = {};\n    if (Array.isArray(floorData)) {\n      floorData.forEach(student => {\n        const roomNumber = student[5]; // Assuming room number is the 6th item in the array\n        if (!rooms[roomNumber]) {\n          rooms[roomNumber] = [];\n        }\n        rooms[roomNumber].push(student);\n      });\n      setRoomsInfo(rooms);\n    }\n  }, [floorData]); // Dependency ensures re-run if floorData changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outer-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", user ? user[1] : 'User']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tutor\\u5BBF\\u820D\\u4FE1\\u606F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u5BBF\\u820D\\u540D\\u79F0\\uFF1A\", room]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Tutor\\u540D\\u79F0\\uFF1A\", user ? user[1] : 'TBD']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tutor\\u8D1F\\u8D23\\u7684\\u697C\\u5C42\\u5B66\\u751F\\u4FE1\\u606F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), Object.keys(roomsInfo).map(roomNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room-detail\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(`/room/${roomNumber}`, {\n              state: {\n                students: roomsInfo[roomNumber]\n              }\n            }),\n            children: [\"Room \", roomNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, roomNumber, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(TutorDashboard, \"MgykYEWlzwN04+kXCZuuk8sSsIk=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = TutorDashboard;\nexport default TutorDashboard;\nvar _c;\n$RefreshReg$(_c, \"TutorDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","backgroundImage","jsxDEV","_jsxDEV","TutorDashboard","_s","location","navigate","user","role","room","floorData","state","roomsInfo","setRoomsInfo","rooms","Array","isArray","forEach","student","roomNumber","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","onClick","students","_c","$RefreshReg$"],"sources":["C:/Users/jerry/OneDrive/桌面/CUHKSZ/CSC3170/CSC3170-Project/my-react-project/src/TutorDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './TutorDashboard.css'; // Ensure your CSS is still applied\nimport backgroundImage from './bg.png';\n\nfunction TutorDashboard() {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const { user, role, room, floorData } = location.state || { user: null, role: null, room: null, floorData: [] };\n\n    const [roomsInfo, setRoomsInfo] = useState({});\n\n    // Parse floor data to organize students by room\n    useEffect(() => {\n        const rooms = {};\n        if (Array.isArray(floorData)) {\n            floorData.forEach(student => {\n                const roomNumber = student[5]; // Assuming room number is the 6th item in the array\n                if (!rooms[roomNumber]) {\n                    rooms[roomNumber] = [];\n                }\n                rooms[roomNumber].push(student);\n            });\n            setRoomsInfo(rooms);\n        }\n    }, [floorData]); // Dependency ensures re-run if floorData changes\n\n    return (\n        <div className=\"outer-container\">\n        <div className=\"content\">\n        \n            <h1>Welcome, {user ? user[1] : 'User'}</h1>\n\n            <div>\n                <h2>Tutor宿舍信息</h2>\n                <p>宿舍名称：{room}</p>\n                <p>Tutor名称：{user ? user[1] : 'TBD'}</p>\n            </div>\n\n            <br />\n             \n            <div className=\"room-info\">\n                <h2>Tutor负责的楼层学生信息</h2>\n                {Object.keys(roomsInfo).map(roomNumber => (\n                    <div key={roomNumber} className=\"room-detail\">\n                        <button onClick={() => navigate(`/room/${roomNumber}`, { state: { students: roomsInfo[roomNumber] } })}>\n                            Room {roomNumber}\n                        </button>\n                    </div>\n                ))}\n            </div>\n        </div>\n        </div>\n        \n    );\n}\n\nexport default TutorDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}