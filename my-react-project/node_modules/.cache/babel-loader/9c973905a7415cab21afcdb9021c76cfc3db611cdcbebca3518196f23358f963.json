{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kant\\\\Desktop\\\\my-react-project\\\\src\\\\SelectionOutput.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './SelectionOutput.css';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SelectionOutput() {\n  _s();\n  const location = useLocation();\n  const roomsData = location.state ? location.state.roomsData : [];\n\n  // Function to create checkboxes for rooms\n  const renderRoomCheckboxes = () => {\n    return roomsData.map((room, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: `room-${index}`,\n        name: `room-${index}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `room-${index}`,\n        children: `${room[0]} - ${room[1]} - Floor: ${room[4]} - ${room[5]}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, `room-${index}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: roomsData.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderRoomCheckboxes(), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No rooms available or selection criteria not met.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectionOutput, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = SelectionOutput;\nexport default SelectionOutput;\nvar _c;\n$RefreshReg$(_c, \"SelectionOutput\");","map":{"version":3,"names":["React","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","SelectionOutput","_s","location","roomsData","state","renderRoomCheckboxes","map","room","index","className","children","type","id","name","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","length","_c","$RefreshReg$"],"sources":["C:/Users/kant/Desktop/my-react-project/src/SelectionOutput.js"],"sourcesContent":["import React from 'react';\r\nimport './SelectionOutput.css';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nfunction SelectionOutput() {\r\n  const location = useLocation();\r\n  const roomsData = location.state ? location.state.roomsData : [];\r\n\r\n  // Function to create checkboxes for rooms\r\n  const renderRoomCheckboxes = () => {\r\n    return roomsData.map((room, index) => (\r\n      <div className=\"checkbox-row\" key={`room-${index}`}>\r\n        <input type=\"checkbox\" id={`room-${index}`} name={`room-${index}`} />\r\n        <label htmlFor={`room-${index}`}>\r\n          {`${room[0]} - ${room[1]} - Floor: ${room[4]} - ${room[5]}`}\r\n        </label>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {roomsData.length > 0 ? (\r\n        <>\r\n          {renderRoomCheckboxes()}\r\n          <button className=\"submit-button\">Submit</button>\r\n        </>\r\n      ) : (\r\n        <p>No rooms available or selection criteria not met.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectionOutput;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,uBAAuB;AAC9B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,SAAS,GAAGD,QAAQ,CAACE,KAAK,GAAGF,QAAQ,CAACE,KAAK,CAACD,SAAS,GAAG,EAAE;;EAEhE;EACA,MAAME,oBAAoB,GAAGA,CAAA,KAAM;IACjC,OAAOF,SAAS,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC/BX,OAAA;MAAKY,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3Bb,OAAA;QAAOc,IAAI,EAAC,UAAU;QAACC,EAAE,EAAG,QAAOJ,KAAM,EAAE;QAACK,IAAI,EAAG,QAAOL,KAAM;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrEpB,OAAA;QAAOqB,OAAO,EAAG,QAAOV,KAAM,EAAE;QAAAE,QAAA,EAC5B,GAAEH,IAAI,CAAC,CAAC,CAAE,MAAKA,IAAI,CAAC,CAAC,CAAE,aAAYA,IAAI,CAAC,CAAC,CAAE,MAAKA,IAAI,CAAC,CAAC,CAAE;MAAC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC;IAAA,GAJ0B,QAAOT,KAAM,EAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAK7C,CACN,CAAC;EACJ,CAAC;EAED,oBACEpB,OAAA;IAAKY,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBP,SAAS,CAACgB,MAAM,GAAG,CAAC,gBACnBtB,OAAA,CAAAE,SAAA;MAAAW,QAAA,GACGL,oBAAoB,CAAC,CAAC,eACvBR,OAAA;QAAQY,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACjD,CAAC,gBAEHpB,OAAA;MAAAa,QAAA,EAAG;IAAiD;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACxD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChB,EAAA,CA5BQD,eAAe;EAAA,QACLL,WAAW;AAAA;AAAAyB,EAAA,GADrBpB,eAAe;AA8BxB,eAAeA,eAAe;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}