{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jerry\\\\OneDrive\\\\\\u684C\\u9762\\\\CUHKSZ\\\\CSC3170\\\\CSC3170-Project\\\\my-react-project\\\\src\\\\SelectionOutput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport styles from './SelectionOutput.module.css';\nimport backgroundImage from './bg.png'; // Import the background image\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SelectionOutput() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const rooms = location.state && location.state.roomsData && Array.isArray(location.state.roomsData.rooms) ? location.state.roomsData.rooms : [];\n  const userData = location.state ? location.state.user : null;\n  const [selectedBuilding, setSelectedBuilding] = useState('');\n  const [checkedRooms, setCheckedRooms] = useState({});\n\n  // Resets the checkedRooms state and sets the selected building\n  const handleBuildingSelection = building => {\n    setSelectedBuilding(building);\n    setCheckedRooms({});\n  };\n  if (rooms.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.containerCentered,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u6CA1\\u6709\\u7B26\\u5408\\u7684\\u623F\\u95F4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n  const buildings = rooms.reduce((acc, room) => {\n    const building = room[0].charAt(0);\n    if (!acc.includes(building)) {\n      acc.push(building);\n    }\n    return acc;\n  }, []).sort();\n  const filteredRooms = rooms.filter(room => room[0].charAt(0) === selectedBuilding);\n  const handleSubmit = async () => {\n    const selectedRoomEntry = Object.entries(checkedRooms).find(([key, value]) => value);\n    if (selectedRoomEntry) {\n      const [selectedRoomIndex] = selectedRoomEntry;\n      const roomToSend = filteredRooms[parseInt(selectedRoomIndex)][0];\n      try {\n        const response = await fetch('http://localhost:5000/view_room', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            Room_ID: roomToSend\n          })\n        });\n        if (response.ok) {\n          const rooms_students = await response.json();\n          navigate('/Dom_select', {\n            state: {\n              rooms_students: rooms_students.data,\n              user: userData,\n              roomid: roomToSend\n            }\n          });\n        } else {\n          console.error('Failed to send room data:', response.status);\n        }\n      } catch (error) {\n        console.error('Error sending room data:', error);\n      }\n    } else {\n      alert('Please select a room before submitting.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.mainContainer,\n    style: {\n      backgroundImage: `url(${backgroundImage})`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.contentFrame,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.title,\n        children: \"\\u6B22\\u8FCE\\u6765\\u5230\\u601D\\u5EF7\\u680B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.selectionContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.sidebar,\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: buildings.map((building, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => handleBuildingSelection(building),\n              className: `${styles.building} ${selectedBuilding === building ? styles.selectedBuilding : ''}`,\n              children: [\"Muse \", building]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.roomsDisplay,\n          children: selectedBuilding === '' ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.noRooms,\n            children: \"\\u8BF7\\u9009\\u62E9\\u4F60\\u7684\\u623F\\u95F4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this) : filteredRooms.length > 0 ? filteredRooms.map((room, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.room,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: `room-${idx}`,\n              name: `room-${idx}`,\n              checked: !!checkedRooms[idx],\n              onChange: () => setCheckedRooms(prev => ({\n                ...prev,\n                [idx]: !prev[idx]\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `room-${idx}`,\n              children: room[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.noRooms,\n            children: \"No rooms available in this building.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.submitButton,\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectionOutput, \"YsJYGQdigRRRtqlX8P+qwIbGOpA=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = SelectionOutput;\nexport default SelectionOutput;\nvar _c;\n$RefreshReg$(_c, \"SelectionOutput\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","styles","backgroundImage","jsxDEV","_jsxDEV","SelectionOutput","_s","location","navigate","rooms","state","roomsData","Array","isArray","userData","user","selectedBuilding","setSelectedBuilding","checkedRooms","setCheckedRooms","handleBuildingSelection","building","length","className","containerCentered","children","fileName","_jsxFileName","lineNumber","columnNumber","buildings","reduce","acc","room","charAt","includes","push","sort","filteredRooms","filter","handleSubmit","selectedRoomEntry","Object","entries","find","key","value","selectedRoomIndex","roomToSend","parseInt","response","fetch","method","headers","body","JSON","stringify","Room_ID","ok","rooms_students","json","data","roomid","console","error","status","alert","mainContainer","style","contentFrame","title","selectionContainer","sidebar","map","index","onClick","roomsDisplay","noRooms","idx","type","id","name","checked","onChange","prev","htmlFor","submitButton","_c","$RefreshReg$"],"sources":["C:/Users/jerry/OneDrive/桌面/CUHKSZ/CSC3170/CSC3170-Project/my-react-project/src/SelectionOutput.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport styles from './SelectionOutput.module.css';\nimport backgroundImage from './bg.png'; // Import the background image\n\n\nfunction SelectionOutput() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const rooms = location.state && location.state.roomsData && Array.isArray(location.state.roomsData.rooms)\n                 ? location.state.roomsData.rooms\n                 : [];\n  const userData = location.state ? location.state.user : null;\n  const [selectedBuilding, setSelectedBuilding] = useState('');\n  const [checkedRooms, setCheckedRooms] = useState({});\n\n  // Resets the checkedRooms state and sets the selected building\n  const handleBuildingSelection = (building) => {\n    setSelectedBuilding(building);\n    setCheckedRooms({});\n  };\n\n  if (rooms.length === 0) {\n    return (\n      <div className={styles.containerCentered}>\n        <h2>没有符合的房间</h2>\n      </div>\n    );\n  }\n\n  const buildings = rooms.reduce((acc, room) => {\n    const building = room[0].charAt(0);\n    if (!acc.includes(building)) {\n      acc.push(building);\n    }\n    return acc;\n  }, []).sort();\n\n  const filteredRooms = rooms.filter(room => room[0].charAt(0) === selectedBuilding);\n\n  const handleSubmit = async () => {\n    const selectedRoomEntry = Object.entries(checkedRooms).find(([key, value]) => value);\n    if (selectedRoomEntry) {\n      const [selectedRoomIndex] = selectedRoomEntry;\n      const roomToSend = filteredRooms[parseInt(selectedRoomIndex)][0];\n\n      try {\n        const response = await fetch('http://localhost:5000/view_room', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ Room_ID: roomToSend })\n        });\n\n        if (response.ok) {\n          const rooms_students = await response.json();\n          navigate('/Dom_select', { state: { rooms_students: rooms_students.data, user: userData, roomid: roomToSend } });\n        } else {\n          console.error('Failed to send room data:', response.status);\n        }\n      } catch (error) {\n        console.error('Error sending room data:', error);\n      }\n    } else {\n      alert('Please select a room before submitting.');\n    }\n  };\n\n  return (\n    <div className={styles.mainContainer} style={{ backgroundImage: `url(${backgroundImage})` }}>\n      <div className={styles.contentFrame}>\n        {/* Title on Top */}\n        <h1 className={styles.title}>欢迎来到思廷栋</h1>\n        \n        {/* Container for Sidebar and Rooms */}\n        <div className={styles.selectionContainer}>\n          \n          {/* Sidebar for Building Selection */}\n          <div className={styles.sidebar}>\n            <ul>\n              {buildings.map((building, index) => (\n                <li\n                  key={index}\n                  onClick={() => handleBuildingSelection(building)}\n                  className={`${styles.building} ${selectedBuilding === building ? styles.selectedBuilding : ''}`}\n                >\n                  Muse {building}\n                </li>\n              ))}\n            </ul>\n          </div>\n          \n          {/* Rooms Display */}\n          <div className={styles.roomsDisplay}>\n            {selectedBuilding === '' ? (\n              <p className={styles.noRooms}>请选择你的房间</p>\n            ) : (\n              filteredRooms.length > 0 ? filteredRooms.map((room, idx) => (\n                <div className={styles.room} key={idx}>\n                  <input\n                    type=\"checkbox\"\n                    id={`room-${idx}`}\n                    name={`room-${idx}`}\n                    checked={!!checkedRooms[idx]}\n                    onChange={() => setCheckedRooms(prev => ({ ...prev, [idx]: !prev[idx] }))}\n                  />\n                  <label htmlFor={`room-${idx}`}>{room[0]}</label>\n                </div>\n              )) : <p className={styles.noRooms}>No rooms available in this building.</p>\n            )}\n          </div>\n        </div>\n        \n        {/* Submit Button */}\n        <button className={styles.submitButton} onClick={handleSubmit}>Submit</button>\n      </div>\n    </div>\n  );\n}\n\n\nexport default SelectionOutput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}